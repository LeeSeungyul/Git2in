apiVersion: v1
kind: Secret
metadata:
  name: git2in-secret
  namespace: git2in
  labels:
    app: git2in
    component: secret
type: Opaque
stringData:
  # IMPORTANT: These are example values. Replace with actual base64-encoded values in production
  # Use: echo -n "your-secret" | base64
  
  # Security keys (generate with: openssl rand -hex 32)
  GIT2IN_SECRET_KEY: "change-this-secret-key-in-production"
  GIT2IN_HMAC_KEY: "change-this-hmac-key-in-production"
  
  # Database credentials (if using external database)
  GIT2IN_DATABASE_URL: "postgresql://git2in:password@postgres:5432/git2in"
  
  # Redis connection (if using Redis)
  GIT2IN_REDIS_URL: "redis://:password@redis:6379/0"
  
  # OAuth/SSO credentials (if configured)
  GIT2IN_OAUTH_CLIENT_ID: ""
  GIT2IN_OAUTH_CLIENT_SECRET: ""
  
  # External service API keys
  GIT2IN_WEBHOOK_SECRET: "webhook-secret-key"
  GIT2IN_MONITORING_API_KEY: ""
  
---
# External Secrets Operator template (for production use)
apiVersion: v1
kind: ConfigMap
metadata:
  name: external-secrets-template
  namespace: git2in
  labels:
    app: git2in
    component: secret-template
data:
  external-secret.yaml: |
    # Example ExternalSecret for production use with External Secrets Operator
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      name: git2in-secret
      namespace: git2in
    spec:
      refreshInterval: 15m
      secretStoreRef:
        name: vault-backend
        kind: SecretStore
      target:
        name: git2in-secret
        creationPolicy: Owner
      data:
      - secretKey: GIT2IN_SECRET_KEY
        remoteRef:
          key: git2in/production
          property: secret_key
      - secretKey: GIT2IN_HMAC_KEY
        remoteRef:
          key: git2in/production
          property: hmac_key
      - secretKey: GIT2IN_DATABASE_URL
        remoteRef:
          key: git2in/production
          property: database_url